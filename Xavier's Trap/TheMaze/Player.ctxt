#BlueJ class context
comment0.params=
comment0.target=void\ act()
comment0.text=\r\n\ Act\ method.\ Everything\ in\ here\ gets\ executed.\r\n
comment1.params=
comment1.target=void\ checkButtons()
comment1.text=\r\n\ Checks\ if\ we\ are\ pressing\ buttons.\r\n\ \r\n\ If\ I\ learned\ anything\ about\ implementing\ gravity,\ it\ is\:\r\n\ \r\n\ Complex\ and\ confusing\ code\ is\ better\ than\ no\ code\ at\ all.\r\n
comment10.params=clss
comment10.target=void\ eat(java.lang.Class)
comment11.params=
comment11.target=void\ cheats()
comment2.params=
comment2.target=void\ checkForCoin()
comment2.text=\r\n\ Checks\ how\ many\ coins\ we\ have.\ We\ need\ 8\ to\ finish\ the\ level.\ It\ also\ plays\ music.\r\n
comment3.params=
comment3.target=void\ animation()
comment3.text=\r\n\ Animates\ the\ player.\ Every\ 5\ times\ the\ code\ is\ executed,\ we\ animate\ the\ character.\ This\ is\ to\ slow\ down\ the\ animation\ speed.\r\n
comment4.params=
comment4.target=void\ setStance()
comment4.text=\r\n\ If\ we\ are\ standing\ still,\ we\ don't\ want\ the\ animation\ to\ be\ stuck\ on\ the\ last\ frame\ it\ was\ on.\ This\ fixes\ that.\r\n
comment5.params=
comment5.target=void\ gravity()
comment5.text=\r\n\ Sets\ the\ gravity.\ If\ we\ cannot\ see\ platforms,\ then\ we\ start\ falling\ until\ we\ hit\ a\ platform.\r\n
comment6.params=
comment6.target=void\ checkForLever()
comment6.text=\r\n\ Checks\ to\ see\ if\ we\ have\ hit\ a\ lever.\ If\ we\ have,\ then\ we\ want\ to\ change\ the\ door\ image\ and\ we\ also\ want\ to\ say\ that\ we\ can\ walk\ through\ the\r\n\ door.\r\n
comment7.params=
comment7.target=void\ checkForPortal()
comment7.text=\r\n\ Checks\ to\ see\ if\ we\ can\ walk\ through\ the\ portal.\ If\ we\ can,\ then\ we\ have\ a\ look\ at\ the\ next\ world\ that\ we\ will\ be\ on.\ Since\ the\ player\ is\r\n\ freshly\ spawned\ in\ every\ single\ world,\ we\ have\ to\ check\ where\ the\ player\ spawned.\ By\ doing\ this,\ we\ then\ get\ a\ guideline\ on\ what\ world\ the\r\n\ player\ is\ in.\r\n
comment8.params=
comment8.target=void\ autoComplete()
comment8.text=\r\n\ This\ is\ the\ autocomplete\ method.\ If\ we\ press\ the\ 1\ key,\ wall\ collision\ turns\ off,\ and\ if\ we\ touch\ the\ portal,\ we\ then\r\n\ finish.\r\n
comment9.params=clss
comment9.target=boolean\ canSee(java.lang.Class)
comment9.text=\r\n\ Stolen\ from\ the\ crabs\ scenario\ from\ the\ beginning\ of\ the\ year,\ but\ modified.\ canSee\ and\ eat\ are\ actually\ pretty\ good\ in\ terms\ of\ minimising\ the\r\n\ amount\ of\ code\ written.\ \r\n\ \r\n\ canSee\ checks\ to\ see\ if\ we\ can\ see\ an\ object\ somewhere\ around\ the\ actor.\ If\ we\ can,\ we\ return\ the\ class.\r\n\ \r\n\ eat\ then\ gets\ rid\ of\ the\ class\ from\ the\ world.\r\n
numComments=12
